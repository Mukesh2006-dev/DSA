#include <stdio.h>
#include <ctype.h>
#include <math.h>
#define max 100
int stack[max];
int top = -1;

void push(int value){
    if(top==max-1){
        printf("Stack is overflow");
    }
    stack[++top]=value;
}
int pop(){
    if(top == -1){
        printf("Stack is empty");
    }
    return stack[top--];
}
int evaluatepostfix(char * postfix){
    char ch;
    int i=0,op1,op2,result;
    while((ch=postfix[i++])!='\0'){
        if(ch==' '|| ch=='\t'){
            continue;
        }
        if(isdigit(ch)){
            push(ch-'0');
        }
        else{
            op2=pop();
            op1=pop();
            switch(ch){
                case '+':result=op1+op2; break;
                case '-':result=op1-op2; break;
                case '*':result=op1*op2; break;
                case '/':result=op1/op2; break;
                case '^':result=(int)pow(op1,op2); break;
                default:
                printf("Invalid %c operator",ch);
            }
            push(result);
        }
    }
    return pop();
}
int main() {
    char postfix[] = "8 2 3 ^ / 2 3 * + 5 1 * -";
    int result=evaluatepostfix(postfix);
    printf("%d\n",result);
    return 0;
}
