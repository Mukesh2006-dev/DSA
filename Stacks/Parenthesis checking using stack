#include <stdio.h>
#include <string.h>
#define max 100

char stack[max];
int top = -1;

void push(char c){
    if(top==max-1){
        printf("Stack is overflow");
    }
    else{
        stack[++top]=c;
    }
}

char pop(){
    if(top == -1){
        printf("Stack is empty");
    }
    else{
        return stack[top--];
    }
}
int isMatching(char open,char close){
    return(open =='(' && close ==')'|| open =='['&& close==']'|| open =='{' && close == '}');
}
int isareparenthesismatched(char*expr){
    char c,popped;
    for(int i=0;expr[i]!= '\0';i++){
         c=expr[i];
        if(c=='(' || c=='[' || c=='{'){
            push(c);
        }else if(c==')'||c==']'||c=='}'){
            popped = pop();
       
            if(!isMatching(popped,c)){
                return 0;
            }
        }
    }
    return top == -1;
}
int main() {
   char expression[100];
   printf("Enter the expression");
   scanf("%s",expression);
    if(isareparenthesismatched(expression)){
        printf("The expression is balanced");
    }
    else{
        printf("The expression is not balanced");
    }

    return 0;
}
