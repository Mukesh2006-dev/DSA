#include <stdio.h>

void insert(int A[], int n){
    int i=n,temp;
    temp=A[i];
    // For Min Heap: bubble up if child < parent
    while(i>1 && temp < A[i/2]){
        A[i] = A[i/2]; 
        i = i/2;
    }
    A[i] = temp;
}

int Delete(int A[], int n){
    int i,j,x,temp,val;
    val = A[1];      // Root value (minimum)
    x = A[n];        // Last element
    A[1] = A[n];     // Move last element to root
    A[n] = val;      // Place deleted value at the end

    i=1;             
    j=2*i;           // Left child
    while(j < n-1){
        // For Min Heap: pick the smaller child
        if(A[j+1] < A[j]){
            j = j+1;
        }
        // If parent > child, swap
        if(A[i] > A[j]){
            temp = A[i];
            A[i] = A[j];
            A[j] = temp;
            i = j;
            j = 2*j;
        }
        else{
            break;
        }
    }
    return val;      // Return deleted min value
}

int main() {
    int H[]={0,40,30,20,35,25,10,5};
    int i;
    for(i=2;i<=7;i++){
        insert(H,i);
    }
    printf("Deleted value is:%d\n",Delete(H,7));
    printf("Deleted value is:%d\n",Delete(H,6));
    for(i=1;i<=7;i++){
        printf("%d ",H[i]);
    }
    printf("\n");
    return 0;
}
