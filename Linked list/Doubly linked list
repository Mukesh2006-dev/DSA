#include <stdio.h>
#include <stdlib.h>
struct Node{
    struct Node*prev;
    int data;
    struct Node*next;
}*first;
void create(int A[],int n){
    struct Node*t,*last;
    int i;
    first=(struct Node*)malloc(sizeof(struct Node));
    first->data=A[0];
    first->prev=first->next=NULL;
    last=first;
    for(i=1;i<n;i++){
        t=(struct Node*)malloc(sizeof(struct Node));
        t->data=A[i];
        t->prev=last;
        t->next=NULL;
        last->next=t;
        last=t;
    }
}
void display(struct Node*p){
    while(p){
        printf("%d<=>",p->data);
        p=p->next;
    }
    printf("\n");
}
void insert(struct Node*p,int index,int x){
    struct Node*t=NULL;
    int i=0;
    if(index==0){
        t=(struct Node*)malloc(sizeof(struct Node));
        t->data=x;
        t->prev=NULL;
        t->next=first;
        if(first!=NULL){
            first->prev=t;
        }
        first=t;
    }
    else{
        t=(struct Node*)malloc(sizeof(struct Node));
        t->data=x;
        for(i=0;i<index-1;i++){
            p=p->next;
        }
        t->next=p->next;
        t->prev=p;
        p->next=t;
        if(p->next!=NULL){
            p->next->prev=t;
        }
    }
}
int Delete(struct Node*p,int index){
   int i;
   int x=0;
   if(index==0){
       first=first->next;
       if(first!=NULL){
       first->prev=NULL;
       }
       x=p->data;
       free(p);
   }
   else{
       for(i=0;i<index-1;i++){
              p=p->next;
          }
          p->prev->next=p->next;
          if(p->next!=NULL){
              p->next->prev=p->prev;
          }
          x=p->data;
          free(p);
      }
      return x;
   }

int main() {
    int A[]={11,12,13,14,15,16};
    create(A,6);
    insert(first,2,3);
   display(first);

    return 0;
}
