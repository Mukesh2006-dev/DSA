#include <stdio.h>
#include <stdlib.h>

struct Node{
    int data;
    struct Node* left;
    struct Node* right;
};
struct Node* createnode(int value){
    struct Node* newnode=(struct Node*)malloc(sizeof(struct Node));
    newnode->data=value;
    newnode->left=newnode->right=NULL;
    return newnode;
}
struct Node* insert(struct Node*root,int value){
    if(root==NULL){
        return createnode(value);
    }
    if(value<root->data){
        root->left=insert(root->left,value);
    }else if(value>root->data){
        root->right=insert(root->right,value);
    }
    return root;
}
struct Node* search(struct Node* root,int key){
    if(root==NULL||root->data==key){
        return root;
    }
    if(key<root->data){
        return search(root->left,key);
    }
    else{
        return search(root->right,key);
    }
}
int height(struct Node*root){
    if(root==NULL){
        return 0;
    }
    int x=height(root->left);
    int y=height(root->right);
    return x>y?x+1:y+1;
}
struct Node*Insuc(struct Node*root){
    while(root&&root->left!=NULL){
        root=root->left;
    }
    return root;
}
struct Node*Inpre(struct Node*root){
    while(root&&root->right!=NULL){
        root=root->right;
    }
    return root;
}
struct Node*Delete(struct Node*root,int key){
    struct Node*q;
    if(root==NULL){
        return NULL;
    }
    if(key<root->data){
        root->left=Delete(root->left,key);
    }
    else if(key>root->data){
        root->right=Delete(root->right,key);
    }
    else{
        if(root->left==NULL&&root->right==NULL){
            free(root);
            return NULL;
        }
        if(height(root->left)>height(root->right)){
            q=Inpre(root->left);
            root->data=q->data;
            root->left=Delete(root->left,q->data);
        }else{
            q=Insuc(root->right);
            root->data=q->data;
            root->right=Delete(root->right,q->data);
        }
    }
    return root;
}
void inorder(struct Node*root){
    if(root!=NULL){
        inorder(root->left);
        printf("%d ",root->data);
        inorder(root->right);
    }
}
int main() {
    struct Node* root=NULL;
    root=insert(root,10);
    insert(root,11);
    insert(root,9);
    insert(root,12);
    insert(root,8);
    int key=8;
    struct Node* result=search(root,key);
        if(result!=NULL){
            printf("key %d is found in the bst tree.\n",key);
        }
        else{
            printf("Key %d is not found in the bst tree.\n",key);
        }
    root=Delete(root,9);
    printf("This is the BST traversal:");
    inorder(root);
    return 0;
}
